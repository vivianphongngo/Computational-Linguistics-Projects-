{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/vivianphongngo/Computational-Linguistics-Projects-/blob/main/Grammatical%20Error%20Detection\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Selected texts containing double superlatives\n",
        "text1= \"\"\"Usain Bolt is the most fastest person in the world and the most quickest and the most beautifulest and the most smallest and the hottest\"\"\"\n",
        "text2= \"\"\"Ebook Head is a place where you can find thousands of the most latest and the most featured ebooks from across the web all in one place. This flavoring keeps the most finnickiest of pooches occupied for hours. The number one most riskiest domain extension goes to .CM representing the country of Cameroon and infamous typo of .COM domains. When Liverpool Football Club, its players and supporters needed a tower of strength in its most darkest of times a beacon shone through, Kenneth Mathieson Dalglish was that light.\"\"\"\n",
        "text3= \"\"\"It is not rocket science, but then the greatest ideas are often the most simplest. It has been seen throughout history and in the recent past that people who have wealth, power and other opulences are the most unhappiest. My most fondest memories include many fun-filled weeks volunteering at camp and working in the office.\"\"\"\n",
        "text4= \"\"\"This was the most unkindest cut of all‚Äù (Julius Caesar), \"[I] am bethought to take the basest and most poorest shape, that ever penury, in contempt of man, brought near to beast\"\"\"\n",
        "texts = [text1, text2, text3, text4]\n",
        "#Imported regular expression\n",
        "import re\n",
        "#For loop to find all the superlatives by searching words ending in \"-est\"\n",
        "for text in texts:\n",
        "  superlatives = re.findall('[A-Za-z]*est', text)\n",
        "  print(\"Superlatives:\", superlatives)\n",
        "#Within this loop, the word before the superlative adjective is searched\n",
        "  wordbeforesup = re.findall('(\\w+)\\s+([A-Za-z]*est)', text)\n",
        "  print(\"Possible double superlatives:\",wordbeforesup)\n",
        "#Error counter if superlative is preceded by the word \"most\"\n",
        "  count = 0\n",
        "  for i in wordbeforesup:\n",
        "    finder = i[0]\n",
        "    if finder == \"most\":\n",
        "      count = count+1\n",
        "  print(\"Total errors =\", count)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DHpcYpZXGhfY",
        "outputId": "61a35093-8b07-442d-ae85-1f41e0a1f42d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Superlatives: ['fastest', 'quickest', 'beautifulest', 'smallest', 'hottest']\n",
            "Possible double superlatives: [('most', 'fastest'), ('most', 'quickest'), ('most', 'beautifulest'), ('most', 'smallest'), ('the', 'hottest')]\n",
            "Total errors = 4\n",
            "Superlatives: ['latest', 'finnickiest', 'riskiest', 'darkest']\n",
            "Possible double superlatives: [('most', 'latest'), ('most', 'finnickiest'), ('most', 'riskiest'), ('most', 'darkest')]\n",
            "Total errors = 4\n",
            "Superlatives: ['greatest', 'simplest', 'unhappiest', 'fondest']\n",
            "Possible double superlatives: [('the', 'greatest'), ('most', 'simplest'), ('most', 'unhappiest'), ('most', 'fondest')]\n",
            "Total errors = 3\n",
            "Superlatives: ['unkindest', 'basest', 'poorest']\n",
            "Possible double superlatives: [('most', 'unkindest'), ('the', 'basest'), ('most', 'poorest')]\n",
            "Total errors = 2\n"
          ]
        }
      ]
    }
  ]
}